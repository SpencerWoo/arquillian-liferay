<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>

<parent>
	<artifactId>com.liferay.arquillian.arquillian-extension-liferay</artifactId>
	<groupId>com.liferay.arquillian</groupId>
	<version>1.0.10</version>
	<relativePath>../pom.xml</relativePath>
</parent>

	<groupId>com.liferay.arquillian</groupId>
	<artifactId>com.liferay.arquillian.arquillian-liferay-extension-example</artifactId>
	<name>Arquillian Liferay Extension Example</name>
	<description>Arquillian Liferay Extension Example</description>

	<properties>
		<test.resources>src/test/resources</test.resources>
		<arquillian.liferay.bundle>${maven.multiModuleProjectDirectory}/arquillian-liferay-bundle</arquillian.liferay.bundle>
		<liferay.home>${arquillian.liferay.bundle}/liferay-ce-portal-7.1.0-ga1</liferay.home>
		<liferay.server>${liferay.home}/tomcat-9.0.6</liferay.server>
		<url.liferay><![CDATA[http://downloads.sourceforge.net/project/lportal/Liferay%20Portal/7.1.0%20GA1/liferay-ce-portal-tomcat-7.1.0-ga1-20180703012531655.zip]]></url.liferay>
		<browser>phantomjs</browser>
		<sleep.seconds>600</sleep.seconds>
	</properties>

	<profiles>
		<profile>
			<id>download-test-environment</id>
			<activation>
				<file>
					<missing>${arquillian.liferay.bundle}/unziped-successfully</missing>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.googlecode.maven-download-plugin</groupId>
						<artifactId>download-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>download-liferay</id>
								<phase>generate-test-sources</phase>
								<goals>
									<goal>wget</goal>
								</goals>
								<configuration>
									<url>${url.liferay}</url>
									<outputDirectory>${arquillian.liferay.bundle}/</outputDirectory>
									<outputFileName>liferay.zip</outputFileName>
									<overwrite>true</overwrite>
									<unpack>true</unpack>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>unzip-liferay</id>
								<phase>process-test-sources</phase>
								<configuration>
									<target>
										<echo message="unzip Liferay" />
										<chmod dir="${liferay.server}/bin/" perm="ugo+rx" includes="**/*.sh" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>create-file</id>
								<phase>process-test-sources</phase>
								<configuration>
									<target>
										<echo message="touch file ${arquillian.liferay.bundle}/unziped-successfully" />
										<touch file="${arquillian.liferay.bundle}/unziped-successfully" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>3.1.1</version>
						<executions>
							<execution>
								<id>copy-jmx-dependencies</id>
								<phase>process-test-sources</phase>
								<goals>
									<goal>copy</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.apache.aries</groupId>
									<artifactId>org.apache.aries.util</artifactId>
									<version>1.1.1</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.aries.jmx</groupId>
									<artifactId>org.apache.aries.jmx.api</artifactId>
									<version>1.1.5</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.aries.jmx</groupId>
									<artifactId>org.apache.aries.jmx.core</artifactId>
									<version>1.1.8</version>
								</artifactItem>
								<artifactItem>
									<groupId>com.liferay</groupId>
									<artifactId>com.liferay.hot.deploy.jmx.listener</artifactId>

									<!-- TODO: replace by non-snapshot version as soon as one is available for Liferay 7.1 -->

									<version>2.0.0-SNAPSHOT</version>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${liferay.home}/osgi/modules</outputDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>windows-profile</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<liferay.executable.start>${liferay.server}/bin/startup.bat</liferay.executable.start>
				<liferay.executable.stop>${liferay.server}/bin/shutdown.bat</liferay.executable.stop>
			</properties>
		</profile>
		<profile>
			<id>unix-profile</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<properties>
				<liferay.executable.start>${liferay.server}/bin/startup.sh</liferay.executable.start>
				<liferay.executable.stop>${liferay.server}/bin/shutdown.sh</liferay.executable.stop>
			</properties>
		</profile>
		<profile>
			<id>firefox</id>
			<properties>
				<browser>firefox</browser>
			</properties>
		</profile>
		<profile>
			<id>chrome</id>
			<properties>
				<browser>chrome</browser>
			</properties>
		</profile>
		<profile>
			<id>start-tomcat</id>
			<activation>
				<property>
					<name>!skipStartTomcat</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.6.0</version>
						<executions>
							<execution>
								<id>clean-tomcat</id>
								<phase>test-compile</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${liferay.executable.stop}</executable>

									<!-- Ignore return code 1 if server is not running -->

									<successCodes>0,1</successCodes>
								</configuration>
							</execution>
							<execution>
								<id>start-tomcat</id>
								<phase>test-compile</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${liferay.executable.start}</executable>
									<async>true</async>
									<asyncDestroyOnShutdown>true</asyncDestroyOnShutdown>
								</configuration>
							</execution>
							<execution>
								<id>stop-tomcat</id>
								<phase>test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${liferay.executable.stop}</executable>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>

								<!--
									TODO instead: find out how to wait until server has actually started up completely
								 	as 100 seconds could be way too short (on my machine it is more like 330 s)
								 	or maybe too long
								-->

								<id>sleep-for-a-while</id>
								<phase>test-compile</phase>
								<configuration>
									<target>
										<echo message="Sleeping for ${sleep.seconds}, waiting for Liferay to start up" />
										<sleep seconds="${sleep.seconds}" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>com.liferay.portal</groupId>
			<artifactId>com.liferay.portal.kernel</artifactId>
			<version>2.3.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.liferay.portal</groupId>
			<artifactId>com.liferay.util.bridges</artifactId>
			<version>2.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.liferay.portal</groupId>
			<artifactId>com.liferay.util.taglib</artifactId>
			<version>2.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.liferay.portal</groupId>
			<artifactId>com.liferay.util.java</artifactId>
			<version>2.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.liferay.arquillian</groupId>
			<artifactId>com.liferay.arquillian.arquillian-container-liferay</artifactId>
			<version>${project.parent.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.graphene</groupId>
			<artifactId>graphene-webdriver</artifactId>
			<version>2.1.0.Alpha2</version>
			<type>pom</type>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>asm</groupId>
					<artifactId>asm</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
			<version>5.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
			<version>5.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.portlet</groupId>
			<artifactId>portlet-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.liferay</groupId>
			<artifactId>com.liferay.shrinkwrap.osgi</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<targetPath>${liferay.home}</targetPath>
				<filtering>true</filtering>
				<directory>${test.resources}/liferay</directory>
				<includes>
					<include>portal-ext.properties</include>
					<include>portal-setup-wizard.properties</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>

						<!--
							Create special property 'liferay.home.unix' for resource filtering in file
							portal-setup-wizard.properties because Liferay does not start correctly on Windows
							if the path contains backslashes
						-->

						<id>regex-property</id>
						<goals>
							<goal>regex-property</goal>
						</goals>
						<configuration>
							<name>liferay.home.unix</name>
							<value>${liferay.home}</value>
							<regex>\\</regex>
							<replacement>/</replacement>
							<failIfNoMatch>false</failIfNoMatch>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.shared</groupId>
						<artifactId>maven-filtering</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>copy-jmx-config</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${liferay.server}/bin</outputDirectory>
							<resources>
								<resource>
									<directory>${test.resources}/tomcat</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>

		<!--
			TODO: remove as soon as non-snapshot version of com.liferay:com.liferay.hot.deploy.jmx.listener
			is available for Liferay 7.1
		-->

		<repository>
			<id>liferay-snapshots</id>
			<url>https://repository.liferay.com/nexus/content/repositories/liferay-public-snapshots/</url>
		</repository>
	</repositories>

</project>
